import configparser
import sys
import os.path

def merge(src1, src2, dest):

    s1 = configparser.ConfigParser()
    s1.read(src1)

    s2 = configparser.ConfigParser()
    s2.read(src2)

    dest_dir = os.path.dirname(dest)

    if not os.path.exists(dest_dir):
        os.makedirs(dest_dir)

    try:
        f = open(dest, 'w')
        f.write('; This file is generated by merge.py\n')
        f.close()
    except FileNotFoundError:
        print('File {} does not exist!'.format(dest))
        exit(1)

    d = configparser.ConfigParser()

    for section in s1.sections():

        try:
            d.add_section(section)
        except configparser.DuplicateSectionError:
            pass

        for key in s1[section]:
            d[section][key] = s1[section][key]

    for section in s2.sections():

        try:
            d.add_section(section)
        except configparser.DuplicateSectionError:
            pass

        for key in s2[section]:
            d[section][key] = s2[section][key]

    try:
        with open(dest, 'w') as f:
            d.write(f)
    except FileNotFoundError:
        print('File {} does not exist!'.format(dest))
        exit(1)
    except IOError:
        print('File {} is not writable!'.format(dest))
        exit(1)


def check_if_file_exists(file_path):
    try:
        open(file_path)
        return True
    except IOError:
        return False
    except FileNotFoundError:
        return False

if __name__ == '__main__':

    if len(sys.argv) < 4:
        print('Usage: python merge.py <src1> <src2> <dest>')
        exit(1)

    src1 = sys.argv[1]
    src2 = sys.argv[2]
    dest = sys.argv[3]

    if not check_if_file_exists(src1):
        print('File {} does not exist!'.format(src1))
        exit(1)

    if not check_if_file_exists(src2):
        print('File {} does not exist!'.format(src2))
        exit(1)

    merge(src1, src2, dest)
